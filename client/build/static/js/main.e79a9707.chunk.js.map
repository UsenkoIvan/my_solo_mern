{"version":3,"sources":["hooks/http.hook.js","components/Loader.js","components/LinksList.js","pages/LinksPage.js","components/LinkCard.js","pages/DeteilPage.js","pages/CreatePage.js","pages/AuthPage.js","hooks/message.hook.js","components/NavBar.js","App.js","hooks/auth.hook.js","routes.js","serviceWorker.js","index.js","context/AuthContext.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","Loader","style","display","justifyContent","paddingTop","className","LinksList","links","length","map","link","index","key","_id","from","to","LinksPage","setLinks","token","useContext","AuthContext","fetchLinks","Authorization","fetched","console","log","useEffect","LinkCard","href","target","rel","clicks","Date","date","toLocaleDateString","DeteilPage","setLink","linkId","useParams","id","getLink","useHistory","require","CreatePage","history","auth","window","M","updateTextFields","pressHandler","e","push","placeholder","type","onChange","value","onKeyPress","htmlFor","AuthPage","text","toast","html","email","password","form","setForm","changeHandler","name","registerHandler","loginHandler","login","userId","marginRight","disabled","onClick","NavBar","padding","preventDefault","logout","App","setToken","ready","setReady","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","isAuthenticated","routes","path","exact","Provider","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","noop","createContext"],"mappings":"yLAEaA,EAAU,WAAO,IAAD,EACGC,oBAAS,GADZ,mBACpBC,EADoB,KACXC,EADW,OAEDF,mBAAS,MAFR,mBAEpBG,EAFoB,KAEbC,EAFa,KAkC3B,MAAO,CAAEH,UAASI,QA9BFC,sBAAW,uCACzB,WAAOC,GAAP,mCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,GACjDT,GAAW,GADb,SAGQQ,IACFA,EAAOE,KAAKC,UAAUH,GACtBC,EAAQ,gBAAkB,oBALhC,SAQ2BG,MAAMP,EAAK,CAAEE,SAAQC,OAAMC,YARtD,cAQUI,EARV,iBASuBA,EAASC,OAThC,WASUC,EATV,OAWSF,EAASG,GAXlB,uBAYY,IAAIC,MAAMF,EAAKG,SAAW,kCAZtC,eAeIlB,GAAW,GAff,kBAiBWe,GAjBX,wCAmBIf,GAAW,GACXE,EAAS,KAAEgB,SApBf,+DADyB,sDAyBzB,IAKyBjB,QAAOkB,WAFff,uBAAY,kBAAMF,EAAS,QAAO,O,yMChC1CkB,EAAS,WACpB,OACE,yBACEC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,SAAUC,WAAY,SAEhE,yBAAKC,UAAU,gCACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,YAEjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,YAEjB,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,gBCbdC,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1B,OAAKA,EAAMC,OAIT,oCACE,+BACE,+BACE,4BACE,sCACA,yJACA,6IACA,kFAIJ,+BACGD,EAAME,KAAI,SAACC,EAAMC,GAChB,OACE,wBAAIC,IAAKF,EAAKG,KACZ,4BAAKF,EAAQ,GACb,4BAAKD,EAAKI,MACV,4BAAKJ,EAAKK,IACV,4BACE,kBAAC,OAAD,CAAMA,GAAE,kBAAaL,EAAKG,MAA1B,4DAtBP,uBAAGR,UAAU,UAAb,2HCCEW,EAAY,WAAO,IAAD,EACHtC,mBAAS,IADN,mBACtB6B,EADsB,KACfU,EADe,OAEAxC,oBAArBE,EAFqB,EAErBA,QAASI,EAFY,EAEZA,QACTmC,EAAUC,qBAAWC,eAArBF,MAEFG,EAAarC,sBAAW,sBAAC,4BAAAE,EAAA,+EAELH,EAAQ,YAAa,MAAO,KAAM,CACtDuC,cAAc,UAAD,OAAYJ,KAHA,OAErBK,EAFqB,OAK3BN,EAASM,GALkB,gDAO3BC,QAAQC,IAAR,MAP2B,yDAS5B,CAACP,EAAOnC,IAMX,OAJA2C,qBAAU,WACRL,MACC,CAACA,IAEA1C,EACK,kBAAC,EAAD,MAEF,qCAAIA,GAAW,kBAAC,EAAD,CAAW4B,MAAOA,MC3B7BoB,EAAW,SAAC,GAAc,IAAZjB,EAAW,EAAXA,KACzB,OACE,oCACE,sFACA,8GAEE,uBAAGkB,KAAMlB,EAAKK,GAAIc,OAAO,SAASC,IAAI,uBACnCpB,EAAKK,KAGV,mEAEE,uBAAGa,KAAMlB,EAAKI,KAAMe,OAAO,SAASC,IAAI,uBACrCpB,EAAKI,OAGV,2HACoB,gCAASJ,EAAKqB,SAElC,8GAEE,gCAAS,IAAIC,KAAKtB,EAAKuB,MAAMC,yBChBxBC,EAAa,WAAO,IACvBjB,EAAUC,qBAAWC,eAArBF,MADsB,EAEDzC,oBAArBM,EAFsB,EAEtBA,QAASJ,EAFa,EAEbA,QAFa,EAGND,mBAAS,MAHH,mBAGvBgC,EAHuB,KAGjB0B,EAHiB,KAIxBC,EAASC,cAAYC,GAErBC,EAAUxD,sBAAW,sBAAC,4BAAAE,EAAA,+EAEFH,EAAQ,aAAD,OAAcsD,GAAU,MAAO,KAAM,CAChEf,cAAc,UAAD,OAAYJ,KAHH,OAElBK,EAFkB,OAKxBa,EAAQb,GALgB,uGAOzB,CAACL,EAAOnC,EAASsD,IAMpB,OAJAX,qBAAU,WACRc,MACC,CAACA,IAEA7D,EACK,kBAAC,EAAD,MAGF,qCAAIA,GAAW+B,GAAQ,kBAAC,EAAD,CAAUA,KAAMA,MC7BxC+B,EAAeC,EAAQ,IAAvBD,WACAhE,EAAYiE,EAAQ,IAApBjE,QACA2C,EAAgBsB,EAAQ,GAAxBtB,YAEKuB,EAAa,WACxB,IAAMC,EAAUH,IACVI,EAAO1B,qBAAWC,GAChBrC,EAAYN,IAAZM,QAHsB,EAINL,mBAAS,IAJH,mBAIvBgC,EAJuB,KAIjB0B,EAJiB,KAM9BV,qBAAU,WACRoB,OAAOC,EAAEC,qBACR,IAEH,IAAMC,EAAY,uCAAG,WAAOC,GAAP,eAAAhE,EAAA,yDACL,UAAVgE,EAAEtC,IADa,0CAGI7B,EACjB,qBACA,OACA,CACE+B,KAAMJ,GAER,CACEY,cAAc,UAAD,OAAYuB,EAAK3B,SAVnB,OAGTvB,EAHS,OAcfiD,EAAQO,KAAR,kBAAwBxD,EAAKe,KAAKG,MAdnB,gDAgBfW,QAAQC,IAAR,MAhBe,yDAAH,sDAoBlB,OACE,yBAAKpB,UAAU,OACb,yBAAKA,UAAU,mBAAmBJ,MAAO,CAAEG,WAAY,SACrD,yBAAKC,UAAU,gBACb,2BACE+C,YAAY,cACZb,GAAG,OACHc,KAAK,OACLC,SAAU,SAACJ,GAAD,OAAOd,EAAQc,EAAErB,OAAO0B,QAClCC,WAAYP,EACZM,MAAO7C,IAET,2BAAO+C,QAAQ,QAAf,kB,gBC1CGC,EAAW,WACtB,IAAMb,EAAO1B,qBAAWC,eAClBtB,ECJCd,uBAAY,SAAC2E,GACdb,OAAOC,GAAKY,GACdb,OAAOC,EAAEa,MAAM,CAAEC,KAAMF,MAExB,IDFyB,EAGoBlF,oBAAxCE,EAHoB,EAGpBA,QAASE,EAHW,EAGXA,MAAOE,EAHI,EAGJA,QAASgB,EAHL,EAGKA,WAHL,EAIJrB,mBAAS,CAAEoF,MAAO,GAAIC,SAAU,KAJ5B,mBAIrBC,EAJqB,KAIfC,EAJe,KAM5BvC,qBAAU,WACR5B,EAAQjB,GACRkB,MACC,CAAClB,EAAOiB,EAASC,IAEpB2B,qBAAU,WACRoB,OAAOC,EAAEC,qBACR,IAEH,IAAMkB,EAAgB,SAAChB,GACrBe,EAAQ,2BAAKD,GAAN,kBAAad,EAAErB,OAAOsC,KAAOjB,EAAErB,OAAO0B,UAGzCa,EAAe,uCAAG,4BAAAlF,EAAA,+EAEDH,EAAQ,qBAAsB,OAAvB,eAAoCiF,IAF1C,OAEdrE,EAFc,OAGpB6B,QAAQC,IAAI9B,GACZG,EAAQH,EAAKG,SAJO,yGAAH,qDAQfuE,EAAY,uCAAG,4BAAAnF,EAAA,+EAEEH,EAAQ,kBAAmB,OAApB,eAAiCiF,IAF1C,OAEXrE,EAFW,OAGjBkD,EAAKyB,MAAM3E,EAAKuB,MAAOvB,EAAK4E,QAHX,uGAAH,qDAOlB,OACE,yBAAKlE,UAAU,OACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,gBAAd,qGACA,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,2BACb,0BAAMA,UAAU,cAAhB,sEACA,6BACE,yBAAKA,UAAU,gBACb,2BACE+C,YAAY,mDACZb,GAAG,QACHc,KAAK,QACLc,KAAK,QACL9D,UAAU,eACVkD,MAAOS,EAAKF,MACZR,SAAUY,IAEZ,2BAAOT,QAAQ,SAAf,UAEF,yBAAKpD,UAAU,gBACb,2BACE+C,YAAY,sDACZb,GAAG,WACHc,KAAK,WACLc,KAAK,WACL9D,UAAU,eACVkD,MAAOS,EAAKD,SACZT,SAAUY,IAEZ,2BAAOT,QAAQ,YAAf,eAIN,yBAAKpD,UAAU,eACb,4BACEA,UAAU,sBACVJ,MAAO,CAAEuE,YAAa,GACtBC,SAAU9F,EACV+F,QAASL,GAJX,wCAQA,4BACEhE,UAAU,qBACVqE,QAASN,EACTK,SAAU9F,GAHZ,qEE9ECgG,EAAS,WACpB,IAAM/B,EAAUH,cACVI,EAAO1B,qBAAWC,eAMxB,OACE,6BACE,yBAAKf,UAAU,4BAA4BJ,MAAO,CAAE2E,QAAS,WAC3D,0BAAMvE,UAAU,eAAhB,iHACA,wBAAIkC,GAAG,aAAalC,UAAU,8BAC5B,4BACE,kBAAC,UAAD,CAASU,GAAG,WAAZ,qDAEF,4BACE,kBAAC,UAAD,CAASA,GAAG,UAAZ,2DAEF,4BACE,uBAAGa,KAAK,IAAI8C,QAjBA,SAACxB,GACrBA,EAAE2B,iBACFhC,EAAKiC,SACLlC,EAAQO,KAAK,OAcL,uC,MCMG4B,MArBf,WAAgB,IAAD,ECLQ,WAAO,IAAD,EACDrG,mBAAS,MADR,mBACpBwC,EADoB,KACb8D,EADa,OAEDtG,oBAAS,GAFR,mBAEpBuG,EAFoB,KAEbC,EAFa,OAGCxG,mBAAS,MAHV,mBAGpB6F,EAHoB,KAGZY,EAHY,KAKrBb,EAAQtF,uBAAY,SAACoG,EAAU7C,GACnCyC,EAASI,GACTD,EAAU5C,GAEV8C,aAAaC,QAXG,OAadhG,KAAKC,UAAU,CAAE2B,MAAOkE,EAAUb,OAAQhC,OAE3C,IAEGuC,EAAS9F,uBAAY,WACzBgG,EAAS,MACTG,EAAU,MACVE,aAAaE,WApBG,UAqBf,IAWH,OATA7D,qBAAU,WACR,IAAM/B,EAAOL,KAAKkG,MAAMH,aAAaI,QAxBrB,SA0BZ9F,GAAQA,EAAKuB,OACfoD,EAAM3E,EAAKuB,MAAOvB,EAAK4E,QAEzBW,GAAS,KACR,CAACZ,IAEG,CAAEA,QAAOQ,SAAQ5D,QAAOqD,SAAQU,SDxBSS,GAAxCxE,EADK,EACLA,MAAOqD,EADF,EACEA,OAAQD,EADV,EACUA,MAAOQ,EADjB,EACiBA,OAAQG,EADzB,EACyBA,MAChCU,IAAoBzE,EAEpB0E,EAAmB,CAAED,mBENDA,gBAGtB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,KAAK,SAASC,OAAK,GACxB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,eACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAU9E,GAAG,aAKjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8E,KAAK,IAAIC,OAAK,GACnB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAU/E,GAAG,OFdjB,OAAKkE,EAIH,kBAAC7D,EAAA,YAAY2E,SAAb,CACExC,MAAO,CAAErC,QAAOqD,SAAQD,QAAOQ,SAAQa,oBAEvC,kBAAC,gBAAD,KACGA,GAAmB,kBAAC,EAAD,MACpB,yBAAKtF,UAAU,aAAauF,KARzB,kBAAC,EAAD,OGJSI,QACW,cAA7BlD,OAAOmD,SAASC,UAEe,UAA7BpD,OAAOmD,SAASC,UAEhBpD,OAAOmD,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAczB,MACrB0B,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAjI,GACL2C,QAAQ3C,MAAMA,EAAMiB,a,+BEzI5B,8DAEA,SAASiH,KAEF,IAAM3F,EAAc4F,wBAAc,CACvC9F,MAAO,KACPqD,OAAQ,KACRD,MAAOyC,EACPjC,OAAQiC,EACRpB,iBAAiB,M","file":"static/js/main.e79a9707.chunk.js","sourcesContent":["import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const request = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setLoading(true);\n      try {\n        if (body) {\n          body = JSON.stringify(body);\n          headers[\"Content-Type\"] = \"application/json\";\n        }\n\n        const response = await fetch(url, { method, body, headers });\n        const data = await response.json();\n\n        if (!response.ok) {\n          throw new Error(data.message || \"Something wrong with Fetch API\");\n        }\n\n        setLoading(false);\n\n        return data;\n      } catch (e) {\n        setLoading(false);\n        setError(e.message);\n        throw e;\n      }\n    },\n    []\n  );\n\n  const clearError = useCallback(() => setError(null), []);\n\n  return { loading, request, error, clearError };\n};\n","import React from \"react\";\n\nexport const Loader = () => {\n  return (\n    <div\n      style={{ display: \"flex\", justifyContent: \"center\", paddingTop: \"2rem\" }}\n    >\n      <div className=\"preloader-wrapper big active\">\n        <div className=\"spinner-layer spinner-blue-only\">\n          <div className=\"circle-clipper left\">\n            <div className=\"circle\"></div>\n          </div>\n          <div className=\"gap-patch\">\n            <div className=\"circle\"></div>\n          </div>\n          <div className=\"circle-clipper right\">\n            <div className=\"circle\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const LinksList = ({ links }) => {\n  if (!links.length) {\n    return <p className=\"center\">Посилань поки що немає </p>;\n  }\n  return (\n    <>\n      <table>\n        <thead>\n          <tr>\n            <th>№</th>\n            <th>Оригінальне посилання</th>\n            <th>Скорочене посилання</th>\n            <th>Відкрить</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {links.map((link, index) => {\n            return (\n              <tr key={link._id}>\n                <td>{index + 1}</td>\n                <td>{link.from}</td>\n                <td>{link.to}</td>\n                <td>\n                  <Link to={`/detail/${link._id}`}>Відкрить</Link>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useHttp } from \"../hooks/http.hook\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { Loader } from \"../components/Loader\";\nimport { LinksList } from \"../components/LinksList\";\n\nexport const LinksPage = () => {\n  const [links, setLinks] = useState([]);\n  const { loading, request } = useHttp();\n  const { token } = useContext(AuthContext);\n\n  const fetchLinks = useCallback(async () => {\n    try {\n      const fetched = await request(\"/api/link\", \"GET\", null, {\n        Authorization: `Bearer ${token}`,\n      });\n      setLinks(fetched);\n    } catch (err) {\n      console.log(err);\n    }\n  }, [token, request]);\n\n  useEffect(() => {\n    fetchLinks();\n  }, [fetchLinks]);\n\n  if (loading) {\n    return <Loader />;\n  }\n  return <>{!loading && <LinksList links={links} />}</>;\n};\n","import React from \"react\";\n\nexport const LinkCard = ({ link }) => {\n  return (\n    <>\n      <h2>Посилання</h2>\n      <p>\n        Ваше посилання:\n        <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">\n          {link.to}\n        </a>\n      </p>\n      <p>\n        Звідки:\n        <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\">\n          {link.from}\n        </a>\n      </p>\n      <p>\n        Кількість кліків: <strong>{link.clicks}</strong>\n      </p>\n      <p>\n        Дата створення:\n        <strong>{new Date(link.date).toLocaleDateString()}</strong>\n      </p>\n    </>\n  );\n};\n","import React, { useState, useCallback, useContext, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useHttp } from \"../hooks/http.hook\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { Loader } from \"../components/Loader\";\nimport { LinkCard } from \"../components/LinkCard\";\n\nexport const DeteilPage = () => {\n  const { token } = useContext(AuthContext);\n  const { request, loading } = useHttp();\n  const [link, setLink] = useState(null);\n  const linkId = useParams().id;\n\n  const getLink = useCallback(async () => {\n    try {\n      const fetched = await request(`/api/link/${linkId}`, \"GET\", null, {\n        Authorization: `Bearer ${token}`,\n      });\n      setLink(fetched);\n    } catch (e) {}\n  }, [token, request, linkId]);\n\n  useEffect(() => {\n    getLink();\n  }, [getLink]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  return <>{!loading && link && <LinkCard link={link} />}</>;\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nconst { useHistory } = require(\"react-router-dom\");\nconst { useHttp } = require(\"../hooks/http.hook\");\nconst { AuthContext } = require(\"../context/AuthContext\");\n\nexport const CreatePage = () => {\n  const history = useHistory();\n  const auth = useContext(AuthContext);\n  const { request } = useHttp();\n  const [link, setLink] = useState(\"\");\n\n  useEffect(() => {\n    window.M.updateTextFields();\n  }, []);\n\n  const pressHandler = async (e) => {\n    if (e.key === \"Enter\") {\n      try {\n        const data = await request(\n          \"/api/link/generate\",\n          \"POST\",\n          {\n            from: link,\n          },\n          {\n            Authorization: `Bearer ${auth.token}`,\n          }\n        );\n\n        history.push(`/detail/${data.link._id}`);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n  return (\n    <div className=\"row\">\n      <div className=\"col s8 offset-s2\" style={{ paddingTop: \"2rem\" }}>\n        <div className=\"input-field \">\n          <input\n            placeholder=\"Insert link\"\n            id=\"link\"\n            type=\"text\"\n            onChange={(e) => setLink(e.target.value)}\n            onKeyPress={pressHandler}\n            value={link}\n          />\n          <label htmlFor=\"link\">Enter link</label>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useHttp } from \"../hooks/http.hook\";\nimport { useMessage } from \"../hooks/message.hook\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nexport const AuthPage = () => {\n  const auth = useContext(AuthContext);\n  const message = useMessage();\n  const { loading, error, request, clearError } = useHttp();\n  const [form, setForm] = useState({ email: \"\", password: \"\" });\n\n  useEffect(() => {\n    message(error);\n    clearError();\n  }, [error, message, clearError]);\n\n  useEffect(() => {\n    window.M.updateTextFields();\n  }, []);\n\n  const changeHandler = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const registerHandler = async () => {\n    try {\n      const data = await request(\"/api/auth/register\", \"POST\", { ...form });\n      console.log(data);\n      message(data.message);\n    } catch (err) {}\n  };\n\n  const loginHandler = async () => {\n    try {\n      const data = await request(\"/api/auth/login\", \"POST\", { ...form });\n      auth.login(data.token, data.userId);\n    } catch (err) {}\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col s6 offset-s3\">\n        <h2 className=\"center-align\">Скороти посилання</h2>\n        <div className=\"card blue darken-1\">\n          <div className=\"card-content white-text\">\n            <span className=\"card-title\">Авторизація</span>\n            <div>\n              <div className=\"input-field \">\n                <input\n                  placeholder=\"Введіть Email\"\n                  id=\"email\"\n                  type=\"email\"\n                  name=\"email\"\n                  className=\"yellow-input\"\n                  value={form.email}\n                  onChange={changeHandler}\n                />\n                <label htmlFor=\"email\">Email</label>\n              </div>\n              <div className=\"input-field \">\n                <input\n                  placeholder=\"Введіть password\"\n                  id=\"password\"\n                  type=\"password\"\n                  name=\"password\"\n                  className=\"yellow-input\"\n                  value={form.password}\n                  onChange={changeHandler}\n                />\n                <label htmlFor=\"password\">Password</label>\n              </div>\n            </div>\n          </div>\n          <div className=\"card-action\">\n            <button\n              className=\"btn yellow darken-2\"\n              style={{ marginRight: 5 }}\n              disabled={loading}\n              onClick={loginHandler}\n            >\n              Увійти\n            </button>\n            <button\n              className=\"btn grey lighten-0\"\n              onClick={registerHandler}\n              disabled={loading}\n            >\n              Реєстрація\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useCallback } from \"react\";\n\nexport const useMessage = () => {\n  return useCallback((text) => {\n    if (window.M && text) {\n      window.M.toast({ html: text });\n    }\n  }, []);\n};\n","import React, { useContext } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nexport const NavBar = () => {\n  const history = useHistory();\n  const auth = useContext(AuthContext);\n  const logoutHandler = (e) => {\n    e.preventDefault();\n    auth.logout();\n    history.push(\"/\");\n  };\n  return (\n    <nav>\n      <div className=\"nav-wrapper blue darken-1\" style={{ padding: \"0 2rem\" }}>\n        <span className=\"brand-logo \">Скорочення посилань</span>\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n          <li>\n            <NavLink to=\"/create\">Створити</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/links\">Посилання</NavLink>\n          </li>\n          <li>\n            <a href=\"/\" onClick={logoutHandler}>\n              Вихід\n            </a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { useRoutes } from \"./routes\";\nimport { useAuth } from \"./hooks/auth.hook\";\nimport { AuthContext } from \"./context/AuthContext\";\nimport { NavBar } from \"./components/NavBar\";\nimport { Loader } from \"./components/Loader\";\nimport \"materialize-css\";\n\nfunction App() {\n  const { token, userId, login, logout, ready } = useAuth();\n  const isAuthenticated = !!token;\n\n  const routes = useRoutes({ isAuthenticated });\n\n  if (!ready) {\n    return <Loader />;\n  }\n  return (\n    <AuthContext.Provider\n      value={{ token, userId, login, logout, isAuthenticated }}\n    >\n      <BrowserRouter>\n        {isAuthenticated && <NavBar />}\n        <div className=\"container\">{routes}</div>\n      </BrowserRouter>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import { useState, useCallback, useEffect } from \"react\";\n\nconst storageUser = \"User\";\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(null);\n  const [ready, setReady] = useState(false);\n  const [userId, setUserId] = useState(null);\n\n  const login = useCallback((jwtToken, id) => {\n    setToken(jwtToken);\n    setUserId(id);\n\n    localStorage.setItem(\n      storageUser,\n      JSON.stringify({ token: jwtToken, userId: id })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    localStorage.removeItem(storageUser);\n  }, []);\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(storageUser));\n\n    if (data && data.token) {\n      login(data.token, data.userId);\n    }\n    setReady(true);\n  }, [login]);\n\n  return { login, logout, token, userId, ready };\n};\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { LinksPage } from \"./pages/LinksPage\";\nimport { DeteilPage } from \"./pages/DeteilPage\";\nimport { CreatePage } from \"./pages/CreatePage\";\nimport { AuthPage } from \"./pages/AuthPage\";\n\nexport const useRoutes = ({ isAuthenticated }) => {\n  if (isAuthenticated) {\n    return (\n      <Switch>\n        <Route path=\"/links\" exact>\n          <LinksPage />\n        </Route>\n        <Route path=\"/create\">\n          <CreatePage />\n        </Route>\n        <Route path=\"/detail/:id\">\n          <DeteilPage />\n        </Route>\n        <Redirect to=\"/create\" />\n      </Switch>\n    );\n  }\n  return (\n    <Switch>\n      <Route path=\"/\" exact>\n        <AuthPage />\n      </Route>\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createContext } from \"react\";\n\nfunction noop() {}\n\nexport const AuthContext = createContext({\n  token: null,\n  userId: null,\n  login: noop,\n  logout: noop,\n  isAuthenticated: false,\n});\n"],"sourceRoot":""}